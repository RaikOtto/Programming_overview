manifest {
   mainScript = 'main.nf'
}

params {
   reads = '/workdir/rotto/data/small/*_{1,2}.fastq.gz'
   reference_genome = '/workdir/rotto/data/GRCm39.fasta'
   reference_annotation = '/workdir/rotto/data/GRCm39.gtf'
   baseDir = '/workdir/projects/Nine-s/nextflow_RS2_hisat2'
   outdir = '/workdir/rotto/results'
   split = 5576251
   num_lines = 5742960
   suffix_length = 3
   reference_cdna_ensembl = '/workdir/rotto/data/GRCm39_cdna_ensembl.fasta'
   reference_annotation_ensembl = '/workdir/rotto/data/GRCm39_ensembl.gtf'
   threads = 4
}

process {
   executor = 'k8s'
   scratch = true
   withName:CHECK_STRANDNESS {
      container = 'ninedem/check_strandedness:latest'
   }
   withLabel:fastp {
      container = 'biocontainers/fastp:v0.20.1_cv1'
   }
   withLabel:python {
      container = 'nfcore/rnaseq:1.4.2'
   }
   withLabel:hisat2 {
      container = 'nfcore/rnaseq:1.4.2'
   }
   withLabel:samtools {
      container = 'biocontainers/samtools:v1.7.0_cv4'
   }
   withLabel:cufflinks {
      container = 'pgcbioinfo/cufflinks:2.2.1'
   }
   withName:split_fastq {
      container = 'nfcore/rnaseq:1.4.2'
   }
  withName:CHECK_STRANDNESS {
    pod {
        nodeSelector = 'exp=nextflow_rotto'
        }
    }
  withName:HISAT2_INDEX_REFERENCE {
    pod {
        nodeSelector = 'exp=nextflow_rotto'
        }
    }
  withName:HISAT2_ALIGN {
    pod {
        nodeSelector = 'exp=nextflow_rotto'
        }
    }
  withName:SAMTOOLS_MERGE {
    	pod {
        	nodeSelector = 'process=nextflow_rotto_merge_sam'
            }
    	}
  withName:SAMTOOLS {
    	pod {
        	nodeSelector = 'exp=nextflow_rotto'
        	}
    	}
  withName:CUFFLINKS {
    	pod {
        	nodeSelector = 'exp=nextflow_rotto'
        }
    }
}

docker {
   enabled = true
}



k8s {
   debug {
      yaml = true
   }
   namespace = 'rotto'
   context = 'rotto'
   runAsUser = 0
   storageClaimName = 'nextflow-rotto'
   storageMountPath = '/workdir'
}

trace {
   enabled = true
   file = '_trace_RS2_C3_D1'
   fields = 'task_id, hash, native_id, process, tag, name, status, exit, module, container, cpus, time, disk, memory, attempt, submit, start, complete, duration, realtime, queue, %cpu, %mem, rss, vmem, peak_rss, peak_vmem, rchar, wchar, syscr, syscw, read_bytes, write_bytes, vol_ctxt, inv_ctxt, env, workdir, script, scratch, error_action'
}

report {
   enabled = true
   file = '_report_RS2_C3_D1.html'
}

timeline {
   enabled = true
   file = '_timeline_RS2_C3_D1'
}

dag {
   enabled = true
   file = '_dag_RS2_C3_D1'
}

